{
	"compiler": {
		"version": "0.8.25+commit.b61c2a91"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "strikePrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expiryTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "premiumTokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "collateralTokenAddress",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "isAmericanStyleOption",
						"type": "bool"
					}
				],
				"name": "deployOptionAndCollateral",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "optionId",
						"type": "uint256"
					}
				],
				"name": "getOptionData",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "isAmericanStyleOption",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "strikePrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "writingPhaseEndTimestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "expiryTimestamp",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "exercisePhaseDuration",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "premiumTokenAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "collateralTokenAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "optionContractAddress",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "collateralContractAddress",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "premiumPerCollateral",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lateDepositThresholdBasisPoints",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lateDepositExtensionDuration",
								"type": "uint256"
							}
						],
						"internalType": "struct CoveredOptionContract.CoveredOption",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getPhase",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "stageId",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lateDepositExtensionDuration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "lateDepositThresholdBasisPoints",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "nextOptionId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "optionExercisePhaseDuration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "optionWritingPhaseDuration",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "options",
				"outputs": [
					{
						"internalType": "bool",
						"name": "isAmericanStyleOption",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "strikePrice",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "writingPhaseEndTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "expiryTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "exercisePhaseDuration",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "premiumTokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "collateralTokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "optionContractAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "collateralContractAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "premiumPerCollateral",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lateDepositThresholdBasisPoints",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lateDepositExtensionDuration",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "OptionWritingPhaseDuration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "OptionExercisePhaseDuration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "LateDepositExtensionDuration",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "LateDepositThresholdBasisPoints",
						"type": "uint256"
					}
				],
				"name": "setParameters",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/StrikePrice.sol": "ClearingHouse"
		},
		"evmVersion": "berlin",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
			"keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
			"license": "MIT",
			"urls": [
				"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
				"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
			"license": "MIT",
			"urls": [
				"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
				"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
			]
		},
		"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
			"keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
			"license": "MIT",
			"urls": [
				"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
				"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
				"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"contracts/StrikePrice.sol": {
			"keccak256": "0x0f411c0fa3c5b1209f18485cab9c6cdbdcc7e0ac1bc3a64765d08ab94a6b6c49",
			"license": "MIT",
			"urls": [
				"bzz-raw://621a4ce40d801e418c7c2087d6bad0d2a516d4af6e08b02d6080f6f2359d326d",
				"dweb:/ipfs/QmbXDWD289kv34htrcb7EqSp1sEQfDBFg36b2y5Q2aJHEr"
			]
		}
	},
	"version": 1
}